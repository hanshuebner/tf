\ Library code -*- Forth-Block -*-                              \ 2-3   Local variables                                         \ 4     Machine codecr .( Loading local variables support...) 0 value locals?       0 value localCount 0 value localOffset $FFE0 VALUE dictAddr $A006 @ VALUE _FIND VARIABLE _LS dictAddr _LS ! HEX CODE: (allotLocals) C073 0A11 A801 _LS , ;CODE CODE: @local C020 _LS , A033 0644 C510 ;CODE CODE: (SET) C020 _LS , A033 C434 ;CODE CODE: (+SET) C020 _LS , A033 A434 ;CODE DECIMAL : allotLocals ( n -- ) COMPILE (allotLocals) , TRUE TO locals? ; : >HASH ( c-addr len -- u) $FFFF -ROT OVER + SWAP DO I C@ XOR 8 0 DO DUP 1 AND SWAP 1 >> SWAP IF $A001 XOR THEN LOOP LOOP ; : (LOCAL) ( addr len -- ) ?DUP IF >HASH dictAddr localCount CELLS + ! 1 +TO localCount ELSE DROP localCount negate allotLocals THEN ; : LOCALS{ ( "name...name }" -- ) 0 TO localCount BEGIN BL WORD OVER C@ ASCII } - OVER 1 - OR WHILE (LOCAL) REPEAT 2DROP  0 0 (LOCAL) ; IMMEDIATE : compileLocal ( -- ) COMPILE @local localOffset 1- CELLS , ; : findLocal ( addr len - offset+1|0) >HASH 0 SWAP localCount 0 DO dictAddr I CELLS + @ OVER = IF SWAP DROP I 1+ SWAP LEAVE THEN LOOP -->   DROP DUP TO localOffset ; : localNotFound ( --) CR ." Error: Local not found." FALSE to locals? ABORT ; : doSET ( xt "local" value -- ) BL WORD findLocal IF , localOffset 1- CELLS , ELSE localNotFound THEN ; : SET  ( "local" value --) ['] (SET) doSet ; IMMEDIATE : +SET ( "local" value --) ['] (+SET) doSet ; IMMEDIATE  : ; locals? IF localCount allotLocals THEN [COMPILE] ; ; IMMEDIATE 0 value _addr 0 value _len : FIND ( addr len -- cfa flag ) 2DUP  TO _len  TO _addr _FIND EXECUTE DUP 0= IF STATE @ IF locals? IF 2DROP _addr _len findLocal IF ['] compileLocal 1 ELSE 0 0 THEN THEN THEN THEN ;                                             ' FIND $A006 ! \ re-vector FIND to use our FIND first                                                                                                                                                                                                                                                                           -->                                                             \ Machine code routines                                         BASE @ HEX                                                      CODE: underSprite ( char quadrants sprite# -- result )          C074 C274 0200 A088 0A21 A001 D070 0221 0400 09B1 D090 0222     0400 09B2 0A51 A042 C014 06C0 04C6 0207 0001 020D 0002 06C1     D801 8C02 06C1 D801 8C02 020E 0002 D0A0 8800 0B19 1101 1003     9080 1601 E187 0A17 060E 16F5 0221 0020 060D 16E9 C506 ;CODE    VARIABLE FCOUNT                                                 CODE: ISR                                                       05A0 FCOUNT , 045B ;CODE                                        BASE !                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          